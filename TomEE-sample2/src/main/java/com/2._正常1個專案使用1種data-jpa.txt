.classpath file

<classpath>
    <!--新增才可以讀取路徑-->
    <classpathentry kind="src" path="src/main/resources"/>
    
    <!--  以下省略  -->
    <classpathentry kind="src" path="src/main/java"/>
</classpath>

*************************************************************************************************
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence" version="2.1">


    <persistence-unit name="openjpaUnit">
        <provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>
        <class>com.example.MyEntity</class>
        <properties>
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:mem:openjpa"/>
        </properties>
    </persistence-unit>

    <persistence-unit name="hibernateUnit">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <class>com.example.MyEntity</class>
        <properties>
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:mem:hibernate"/>
        </properties>
    </persistence-unit>
    
</persistence>

理論上可行，但如果它們連接同一個資料庫，會產生潛在衝突（例如 OpenJPA 和 Hibernate 可能會產生不同的表結構或影響相同的 Transaction）。

需同時滿足條件：

1.使用不同的資料庫

2.管理不同的 @Entity

<properties>
	  <!-- javax.persistence.jdbc.xxx是固定名稱；屬性名稱是 JPA 標準 -->
      <property name="jakarta.persistence.jdbc.driver"   value="com.mysql.cj.jdbc.Driver"/>
      <property name="jakarta.persistence.jdbc.url"      value="jdbc:mysql://localhost:3306/test?serverTimezone=UTC"/>
      <property name="jakarta.persistence.jdbc.user"     value="root"/>
      <property name="jakarta.persistence.jdbc.password" value="12345678"/>
<\properties>