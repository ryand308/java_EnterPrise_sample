不同版的<persistence>
<persistence version="3.0" xmlns="https://jakarta.ee/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="https://jakarta.ee/xml/ns/persistence
             https://jakarta.ee/xml/ns/persistence/persistence_3_0.xsd">
***************************************************************************************************


參考範例：
來源自 Aphache TomEE 在 WEB-INF/persistence.xml

<persistence xmlns="http://java.sun.com/xml/ns/persistence" version="1.0">

  <persistence-unit name="movie-unit transaction-type="JTA">
  
  	
    <jta-data-source>movieDatabase</jta-data-source>        
    <!--   相同功能擇一使用 -->
    <non-jta-data-source>movieDatabaseUnmanaged</non-jta-data-source>

    <properties>
      <property name="openjpa.jdbc.SynchronizeMappings" value="buildSchema(ForeignKeys=true)"/>
    </properties>
    
  </persistence-unit>
</persistence>

***************************************************************************************************
參考配置的版本：

<persistence xmlns="http://java.sun.com/xml/ns/persistence" version="1.0">

  <!-- 非 JTA 管理的數據源，適用於 transaction-type="RESOURCE_LOCAL" -->
  <persistence-unit name="myPersistenceUnit" transaction-type="RESOURCE_LOCAL">
  
  	<!-- class 有寫@Entity JPA 也會自動掃描 -->
    <class>com.model.entity.Students</class>
    <class>com.model.entity.EmployeeLuv2</class>

    <properties>
    	<!-- javax.persistence.jdbc.xxx是固定名稱；屬性名稱是 JPA 標準 -->
      <property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver"/>
      <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/test?serverTimezone=UTC"/>
      <property name="javax.persistence.jdbc.user" value="root"/>
      <property name="javax.persistence.jdbc.password" value="12345678"/>
      
      <!-- 使用 <jta-data-source> 並且已在 server.xml 設定 DataSource，則 <properties> 部分可以完全刪除 -->
      
    </properties>
  </persistence-unit>
</persistence>
***************************************************************************************************
可用運行版:

<persistence xmlns="http://java.sun.com/xml/ns/persistence" version="1.0">
 
  <persistence-unit name="myPersistenceUnit" transaction-type="JTA">
  	 <provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>
	<jta-data-source>jdbc/jndi</jta-data-source>
	
  	<!-- 沒有寫<class>, 有寫@Entity JPA 也會自動掃描 -->
    <class>com.model.entity.Students</class>
    <class>com.model.entity.EmployeeLuv2</class>

	<!-- default預設為 false， spring tomEE可寫可不寫-->
	<!-- true 只有在你希望手動控制 JPA 掃描範圍（只讓特定類別被識別）時，才需要明確設為 true-->
   <exclude-unlisted-classes>false</exclude-unlisted-classes>
  </persistence-unit>
</persistence>
***************************************************************************************************
備註：
<jta-data-source>  或使用  <non-jta-data-source> 差別：

--------------------------------------------------------------------------
1.<jta-data-source></jta-data-source> 
--------------------------------------------------------------------------
如果 server.xml 配置的 jdbc/jndi 成為 JTA 管理的數據來源

<persistence-unit name="movie-unit" transaction-type="JTA"> 
    <jta-data-source>jdbc/jndi</jta-data-source>
</persistence-unit>

<!-- Database 如果寫在server 可交由 JTA @Transactional、@PersistenceContext管理 transaction-type="JTA" --> 

--------------------------------------------------------------------------
2.<non-jta-data-source></non-jta-data-source>
--------------------------------------------------------------------------
如果你不想用 JTA，而是自己管理交易（即 RESOURCE_LOCAL）
<persistence-unit name="movie-unit" transaction-type="RESOURCE_LOCAL">  
    <non-jta-data-source>jdbc/jndi</non-jta-data-source>
</persistence-unit>

<!-- Database 如果寫在server 屬性 transaction-type="RESOURCE_LOCAL"；EntityManager 和 EntityTransaction 必須手動管理